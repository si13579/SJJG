抽象数据类型线性表的定义如下：

ADT List {
    数据对象：D = { a(下标i) | a(下标i) ∈ Elemset，i = 1,2,...,n,n>=0 }
    数据关系: R1 = { <a(下标i-1),a(下标i)> | a(下标i-1),a(下标i) ∈ D,i = 2,...,n }
    基本操作:
        InitList(&L)
            操作结果：构建一个空的线性表L.
        DestoryList(&L)
            初始条件：线性表L已存在。
            操作结果：销毁线性表L。
        ClearList(&L)
            初始条件：线性表L已存在。
            操作结果：将L重置为空表。
        ListEmpty(L)
            初始条件：线性表L已存在。
            操作结果：若L为空表，则返回TRUE,否则返回FALSE.
        ListLength(L)
            初始条件：线性表L已存在。
            操作结果：返回L中的数据元素个数。
        GetElem(L,i,&e)
            初始条件：线性表L已存在，1 <= i <= ListLength(L).
            操作结果：用e返回L中底i个数据元素的值。
        LocateElem(L,e,compare())
            初始条件：线性表L已存在，compare()是数据元素判定函数。
            操作结果：返回L中第一个与e满足关系compare()的数据元素的位序。若这样的数据元素
                    不存在，则返回值为0.
        PriorElem(L, cur_e, &pre_e)
            初始条件：线性表L已存在。
            操作结果：若cur_e是L中的数据元素，且不是第一个，则用pre_e返回它的前驱，否则操作失败，
                    pre_e无定义。
        NextElem(L, cur_e, &next_e)
            初始条件：线性表L已存在。
            操作结果：若cur_e是L中的数据元素，且不是最后一个，则用next_e返回它的后驱，否则操作失败，
                    next_e无定义。
        ListInsert(&L,i,e)
            初始条件：线性表L已存在，1 <= i <= ListLength(L)+1.
            操作结果：在L中第i个位置之前插入新的数据元素e，L的长度加1.
        ListDelete(&L,i,&e)
            初始条件：线性表L已存在，1 <= i <= ListLength(L).
            操作结果：删除L中的第i个数据元素，并用e返回其值，L的长度减1.
        ListTraverse(L,visit())
            初始条件：线性表L已存在。
            操作结果：依次对L中的每个数据元素调用函数visit().一旦visit()失败，则操作失败。
}ADT List